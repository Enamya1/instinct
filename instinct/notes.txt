extends CharacterBody2D



var speed =100 
var FRICTION =-100
var player_size:int =10
var reflaction_rate= 1
var direction
const screen_H=648
const screen_w =1152

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	accelerat(delta)
	border(screen_w,screen_H,Vector2(-1,-1))
	print(position)
	move_and_slide()




func accelerat(delta)-> void:
	var mouse_position=get_viewport().get_mouse_position()
	look_at(mouse_position)
	direction = (mouse_position - position).normalized()
	var movement = normal_vec(direction) * speed * delta
	if Input.is_action_pressed("move_f"):
		velocity += movement
	

func normal_vec(vec:Vector2)->Vector2:
	var x= vec.x/abs(vec.x)
	var y= vec.y/abs(vec.y)
	return Vector2(x,y)
	
func border(S_W,S_H,dir)-> void:
	if position.x >= S_W:
		position.x=S_W-player_size
		velocity=Vector2(0,0)
		
	if position.x< 0:
		position.x=0+player_size
		velocity=Vector2(0,0)
		
	if position.y <0:
		position.y=0+player_size
		velocity=Vector2(0,0)
		
	if position.y >S_H:
		position.y=S_H-player_size
		velocity=Vector2(0,0)

# Add the gravity.
	#if not is_on_floor():
	#	velocity += get_gravity() * delta

	# Handle jump.
	#if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		#velocity.y = JUMP_VELOCITY
	
